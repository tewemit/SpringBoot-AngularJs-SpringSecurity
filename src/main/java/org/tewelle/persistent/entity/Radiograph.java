package org.tewelle.persistent.entity;

import org.hibernate.validator.constraints.NotEmpty;

import javax.persistence.*;
import javax.print.Doc;
import javax.validation.constraints.NotNull;

/**
 * This entity or table is expected to persist patient radiographs and connect them to the doctor who took them.
 * So, it is gonna have two foreign keys, patientId and doctorId.
 * Created by tewe on 12/7/2016.
 */

@Entity
@Table(name = "radiographs")
public class Radiograph {

    // ------------------------
    // PRIVATE FIELDS
    // ------------------------

    // An autogenerated id (unique for each user in the db)
    @Id
    @GeneratedValue(strategy = GenerationType.AUTO)
    private long id;

    @NotNull
    @NotEmpty
    private long patient_Id;
    
    private long doctor_Id;

    // The radiology title
    @NotNull
    private String title;

    @NotNull
    private String description;

    @ManyToOne( fetch = FetchType.EAGER, targetEntity = Patient.class)
    @JoinTable(name = "radiograph_patient", joinColumns = { @JoinColumn(name = "radiograph_Id") }, inverseJoinColumns = { @JoinColumn(name = "patient_Id") })
    private Patient patient;

    @ManyToOne( fetch = FetchType.EAGER, targetEntity = Doctor.class)
    @JoinTable(name = "radiograph_doctor", joinColumns = { @JoinColumn(name = "radiograph_Id") }, inverseJoinColumns = { @JoinColumn(name = "doctor_Id") })
    private Doctor doctor;

    // ------------------------
    // PUBLIC METHODS
    // ------------------------

    public Radiograph() { }

    public Radiograph(long id) {
        this.id = id;
    }

    public Radiograph(long patient_Id, long doctor_Id, String title, String category, String description)
    {
        this.patient_Id=patient_Id;
        this.doctor_Id=doctor_Id;
        this.title = title;
        this.description = description;
    }

    // Getter and setter methods

    public long getId() {
        return id;
    }

    public void setId(long value) {
        this.id = value;
    }

    public long getPatient_Id() {
        return patient_Id;
    }

    public void setPatient_Id(long patient_Id) {
        this.patient_Id = patient_Id;
    }

    public long getDoctor_Id() {
        return doctor_Id;
    }

    public void setDoctor_Id(long doctor_Id) {
        this.doctor_Id = doctor_Id;
    }

    public String getTitle() {
        return title;
    }

    public void setTitle(String value) {
        this.title = value;
    }

    public String getDescription() {
        return description;
    }

    public void setDescription(String value) {
        this.description = value;
    }


    @Override
    public String toString() {
        return String.format("[id = %d, patient_id: %d, doctor_id: %d, title = %s, description=%s]", id, patient_Id, doctor_Id, title, description);
    }

    public void initTestData(){
        this.setId(1);
        this.setPatient_Id(1);
        this.setDoctor_Id(1);
        this.setTitle("right wrist image");
        this.setDescription("It seems the patient has got a wrist fracture on the right hand");
    }

    //@ManyToOne
    //@JoinColumn(name="fk_patient_Id", insertable = false,updatable = false)
    public Patient getPatient() {
        return patient;
    }

   // @ManyToOne
    //@JoinColumn(name="fk_doctor_Id",insertable = false,updatable=false)
    public Doctor getDoctor() {
        return doctor;
    }

}
