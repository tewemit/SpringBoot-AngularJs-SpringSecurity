package org.tewelle.persistent.entity;

import javax.persistence.*;
import javax.validation.constraints.NotNull;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

/**
 * An entity Patient composed of fields: id, PIN, email, FirstName, LastName, and gender).
 * The Entity annotation indicates that this class is a JPA entity.
 * The Table annotation specifies the LastFirstName for the table in the db.
 *
 * @author Tewelle
 */
@Entity
@Table(name = "patients", uniqueConstraints = {
        @UniqueConstraint(columnNames = "PIN") } )
public class Patient {

  // ------------------------
  // PRIVATE FIELDS
  // ------------------------

  /*@ElementCollection(targetClass=Radiograph.class)
  private Set<Radiograph> radiographs = new HashSet<>(0);
*/
  // An autogenerated id (unique for each user in the db)
  @Id
  @GeneratedValue(strategy = GenerationType.AUTO)
  private long id;

  
  @NotNull
  @Column(name="pin", unique = true)
  private String pin;
  
  // The patient's FirstName
  @NotNull
  private String FirstName;
  @NotNull

  private String LastName;
  @NotNull
  private String gender;


  @NotNull
  private Date updateDate;



  @NotNull
  private Date creationDate;


  // ------------------------
  // PUBLIC METHODS
  // ------------------------
  
  public Patient() { }

  public Patient(long id) { 
    this.id = id;
  }
  
  public Patient(String PIN, String firstName, String LastName, String gender) {
    this.pin = PIN;
    this.FirstName= firstName;
    this.LastName = LastName;
    this.gender =gender;
  }

  // Getter and setter methods

  public long getId() {
    return id;
  }

  public void setId(long value) {
    this.id = value;
  }

  
  public String getLastName() {
    return LastName;
  }

  public void setLastName(String value) {
    this.LastName = value;
  }


  public String getgender() {
    return gender;
  }

  public void setgender(String gender) {
    this.gender = gender;
  }

  public void update(String FirstName, String LastName , String gender)
  {
    this.LastName = LastName;
    this.FirstName = FirstName;
    this.gender =gender;
  }

  public String getFirstName() {
    return this.FirstName;
  }

  public void setFirstName(String FirstName) {
    this.FirstName = FirstName;
  }

  public Date getUpdateDate() {
    return updateDate;
  }

  public void setUpdateDate(Date updateDate) {
    this.updateDate = updateDate;
  }

  public Date getCreationDate() {
    return creationDate;
  }

  public void setCreationDate(Date creationDate) {
    this.creationDate = creationDate;
  }


  @PreUpdate
  public void preUpdate() {
    updateDate = new Date();
  }

  @PrePersist
  public void prePersist() {
    Date now = new Date();
    creationDate =now;
    updateDate = now;
  }

  // Override the toString method and return a json formatted string.
  @Override
  public String toString() {
    return String.format("[id = %d, PIN: %s, LastName = %s, gender=%s, FirstName: %s]", id, pin,LastName, gender, FirstName);
  }

  // @JoinTable(name = "patient_radiographs", joinColumns = { @JoinColumn(name = "patient_Id", referencedColumnName = "id") }, inverseJoinColumns = { @JoinColumn(name = "radiograph_id", table = "radiograph", referencedColumnName = "id") })

  /*public Set<Radiograph> getRadiograph() {
    return this.radiographs;
  }

  @OneToMany(mappedBy = "patient",cascade = CascadeType.ALL)
  public void setRadiograph(Set<Radiograph> radiographs) {
    this.radiographs=radiographs;
  }
*/

}


